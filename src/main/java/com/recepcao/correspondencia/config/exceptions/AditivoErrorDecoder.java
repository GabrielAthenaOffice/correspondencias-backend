package com.recepcao.correspondencia.config.exceptions;

import feign.Response;
import feign.codec.ErrorDecoder;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;

@Slf4j
@Component
public class AditivoErrorDecoder implements ErrorDecoder {

    private final ErrorDecoder defaultErrorDecoder = new Default();

    @Override
    public Exception decode(String methodKey, Response response) {
        if (response.status() == 403) {
            log.error("üîê API Key rejeitada pela API de Aditivo");
            return new SecurityException("Acesso negado - API Key inv√°lida ou expirada");
        }

        if (response.status() == 401) {
            log.error("üîê Acesso n√£o autorizado √† API de Aditivo");
            return new SecurityException("N√£o autorizado - verifique as credenciais");
        }

        if (response.status() == 404) {
            log.error("üîç Endpoint n√£o encontrado na API de Aditivo");
            return new RuntimeException("Endpoint n√£o encontrado - verifique a URL");
        }

        log.error("‚ùå Erro {} na comunica√ß√£o com API de Aditivo: {}", response.status(), response.reason());
        return defaultErrorDecoder.decode(methodKey, response);
    }
}